					ВОЗМОЖНОСТИ ПРОЦЕССОРА И АССЕМБЛЕРА
Архитектурные принципы Неймана:
1. центральный процессор и оперативная память в основе компьютера
2. оперативная память состоит из ячеек памяти
3. цп в любой момент может записать число из этого диапазона в любую из ячеек, а также прочитать содержимое любой ячейки
4. с точки зрения цп ячейки памяти отличаются только номерами - адресами
5. цп автоматически выполняет одну за другой операции, предписанные программой
6. программа хранится в ячейках оперативной памяти в виде машинных инструкций
7. ячейка памяти не знает содержимое

В составе цп присутствуют электронные схемы для хранения информации, подобные ячейкам памяти. Обычно различают регистры общего назначения и служебные регистры.

Общего для кратковременного размещения обрабатываемых данных; операции с ними выполняются порядком быстрее, чем с ячейками памяти, но совокупный объем регистров в миллиарды раз меньше объема памяти.

Служебные регистры содержат информацию, необходимую процессору для организации выполнения программы. Важнейший из служебных регистров - указатель инструкции, иногда называемый СЧЕТЧИК КОМАНД.

Передача управления - это принудительное изменение адреса, находящегося в регистреуказателя инструкции (счетчика команд)


					ПРИКОЛЫ АССЕМБЛЕРА
Регистры 32-битного процессора: EAX, EBX, ECX, EDX, ESI, EDI, EBP и ESP

Флаги: ZF - нулевого результата, CF - флаг переноса, SF - флаг знака, OF - флаг переполнения, DF - флаг направления, PF&AF - флаг четности и флаг полупереноса, IF&TF - флаг разрешения прерываний и ловушки

						СИ
!! Компилятор генерирует не готовый машинный код, а объектный модуль, в котором пока не хватает адресов; на эти адреса могут быть подставлены модули с соответствующим именем

Штатного способа прочитать строку, никак не ограничивая ее длину, в библиотеке Си нет ни в каком виде.

Использовать функцию gets категорически недопустимо - никогда, ни в каких программах, ни для каких целей.

!!!Если не указать ширину поля при чтении строки с помощью scanf, то каков бы ни был размер массива, каковы создали для размещения этой строки, этого размера может не хватит и произойдет переполнения.
Короче говоря, указание ширины поля при чтении строк абсолютно обязательно.

286 - функция откроет первый файл на чтение, второй на запись и запишет во второй первые десять строк из первого
290 - функция чтения строки из поток f1, после чего записывает в поток f2
305 - сопоставление строки с образцом
323 - удаление из заданного списка всех элементов, удовлетворяющих определенному условию
330 - обход дерева + 329 - рекурсивный метод 

typedef - сила

FILE* fprintf и fscanf - форматированный ввод/вывод для потоков
fputc, fgetc - для ввода и вывода отдельных char'ов
stdin, stdout,  fputs, fgets
printf и scanf - форматированный ввод и вывод	| Спецификаторы на стр. 275

Значение, возвращенное функцией getchar, нельзя сразу присваивать переменной типа char

enum { max_name_len = 64, max_group_len = 8 };
struct student {
  char name[max_name_len];
};

Использование enum вместо чисел, например в switch(n) { case 1: /* ... */ case 2: /* ... */ }
обязательно!

Текст, подаваемый на вход макропроцессору, как рпавило содержит определенные указания по его преобразованиб, выраженыые в виде макродиректив и макровызовов; результатом работы становится текст, но уже содержащий макродиректив и не требующий дальнейшего преобразования.

Макроопределение #define, макроимена BUFFERSIZE 1024
#define BUFFERSIZE 1024

Все функции и глобальные переменные, которые вы решили не выносить в заголовочник, нужно обязательно пометить модификатором static
364 - Описание типов и макросов в заголовочных файлах; защита от повторного включения

!!! Оформление кода
Текст программы предназначен в первую очередь для прочтения человеком, и лишь во вторую - для обработки компьюетром.
Операторную скобку, обозначающую начало тела функции, всегда сносят на отдельную строку {
24х80 знакомест

372 - Фирменные особенности Си для оформления кода

Символы, не входящий в набор ASCII, в тексте программ использовать нельзя

405 - возможности стандартной библиотеки, которые лучше не использовать, пока нет уверенности в проге C

Далее паста про ncurses

441 - список ключей для компилятора gcc

valgrind - утилита, что позволяет в автоматическом режиме обнаружить в поведении программы такие особенности, которые могут рано или поздно привести к тяжелым последствиям
valgrind --tool=memcheck --db-attach=yes ./badcode 2> VG_LOG

diff - получает две версии одного файла и предполагая, что первая из них - "исходная", а вторая - "измененная", эта программа покажет, какие строки изменились, а какие были вставлены или удалены
diff hello.c hello2.c

patch, cvs




