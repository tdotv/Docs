					ОБЪЕКТЫ И УСЛУГИ ОС
Обращение пользовательской задачи к ОС за услугами называется системным вызовом.
Задачи процесса делятся на привелегированные и непривилегированные и работать сам процессор может в привилегированном режиме или в ограниченном.
	(привелигированный подразумевает выполнение любой команды, во второй - только непривилегированные).
Возврат управления системе происходит в трех случаях:
1. Аппаратные/внешние прерывания;
2. Внутренние прерывания или исключения (деление на ноль, обращение за пределы памяти);
3. Системный вызов (программные прерывания).
Ядро является единственной программой, код которой выполняется в привилегированном режиме центрального процессора.

Мультизадачность бывает пакетной, где задача перестает выполняться лишь дойдя до конца, либо когда ей требуется дождаться какого-то события (для суперкомпьютеров). 
Существует также режим разделения времени, при котором задачи дополнительно могут сменять друг друга, если одна из них успела отработать определенное кол-во времени.
Задаче выдается процессорное время и она его выполняет, поэтому такой метод (разделения времени) используется в общении с пользователем или на сервере.
!!! Выделяется также промежуточный режим реального времени, где задача планировщика не дать поработать хоть сколько-то, но и обеспечить предсказуемость "грязного" времени
(т.е. попробовать заранее узнать, успеет ли та или иная программа завершится). 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					Что делает ОС?
		1. УПРАВЛЕНИЕ ПОЛЬЗОВАТЕЛЬСКИМИ ЗАДАЧАМИ
УПРАВЛЕНИЕ запуском и остановом процессов;
К УПРАВЛЕНИЮ задачами следует отнести планирование времени центрального процесса;
В понятие УПРАВЛЕНИЯ входит понятие управление оперативной памятью;
К УПРАВЛЕНИЮ относится также организация межпроцессорного взаимодействия (т.е. приложение1 - ОС - прложение2);
К УПРАВЛЕНИЮ мы отнесем разграничение полномочий.

		2. УПРАВЛЕНИЕ ВНЕШНИМИ УСТРОЙСТВАМИ
Абстрагирование и координация.
Координация подразумевает собой не перетягивание запросов к контроллеру для выполнения действия, а отправка запросов в ОС, которая уже решает как будут выполняться запросы
контроллером.
Абстрагирование же представляет собой видение особенностей физических устройств в некой упрощенной абстракцией.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

				ГРАНИЦЫ ЗОНЫ ОТВЕТСТВЕННОСТИ ОС
Задачи, решаемые операционными системами:
- Управление пользовательскими задачами: запуск и останов процессов, планирование времени центрального процессора, распределение оперативной памяти, организация взаимодействия между процессами и разграничение полномочий.
- Управление внешними устройствами: абстрагирование от особенностей устройств разных моделей, координация доступа нескольких задач к одному устройству.

Операционная система не должна содержать никаких средств, направленных на организацию общения с пользователем. Т.е. графические надстройки должны общаться с пользователем, а не ОС.

*Драйвер - набор подпрограмм, отвечающих за работу с конкретным физическим устройством; как правило, драйвер действует как часть ядра операционной системы.

				Unix: семейство систем и образ мышления
1. Каждая программа должна решать ровно одну задачу, и делать это хорошо.
Отдается предпочтение текстовым данным, но есть исключения: данные, запакованные архиваторами для уменьшения хранимого объема, и данные, зашифрованные криптографией.
DNS - бинарный протокол, а электронная почта и WEB - текстовый протокол.
2. Молчание - золото. (выполнение команд и программ молча)
3. Метод, а не политика. (без уточнения, как оно должно выглядеть и функционировать).
4. Все есть файл.
5. Все есть поток байтов. Все потоки ввода-вывода делятся на позционируемые (обычные файлы, в кот. рабочая позиция может быть изменена) 
и непозиционируемые (байты передаются один за другим и на них нельзя повлиять).

				Замечания о системе X Window
Чтобы отобразить окно необходимо отправить запрос, именуемый X-протоколом.
"По ту сторону" соединения находится программа X-сервер. - Сам сервер ничего не отрисовывает, а выполняет действия в ответ на запросы.
Оконный менеджер общается с x-сервером при помощи X-протокола.

Программа, выполняющаяся на X-терминале, называется X-сервером, а пользовательский программы, выполняющиеся на сервере приложений, называются X-клиентами.
По сути услуги предоставления графических объектов предоставляет X-терминал.
X-терминал это машина, система, которая выполняет единственное назначение: поддержка x-сервера. Просто сервер приложений, который отправляет выполнение программы в другое место.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

				Интерфейс ядра - системные вызовы
		Вызовы и их обертки
Ядро операционной системы предоставляет свои услуги пользовательским программам через интерфейс системных вызовов. В зависимости от ОС они могут сильно отличаться не только номером,
но и требовать различные константы.
		О разграничении полномочий
Разграничение полномочий разделено на идентификатор пользовтеля и идентификатор группы пользователей. (uid, gid)
Ядро системы ничего не знает о файлах etc/passwd и etc/group. Для нее это всего лишь uid и gid.

				Файловая система
Хранимая на внешнем запоминающей устройстве структура данных, содержащая всю информацию о файле, исключая его имя, называется индексным дескриптором. Каждая запись в каталоге состоит из имени файла и индексного дескриптора.
В большинстве случаев операции записи выполняются системой в асинхронном режиме.

Устройства, имевющие представление в виде файла, делятся на два типа: символьные (байт-ориентированные) - терминал, принтер, мышь и блочные (блок-ориентированные) - диски.

				Процессы
Это объект, созданная для выполнения пользователькой программы ядром.
pid - process identifier.
Процесс состоит из секций: секции кода, секция данных (куча), секция стека
Важная характеристика процесса - состояние регистров центрального процессора (счетчик команд, регистр флагов).

Планировщик времени центрального процессора. Приоритет задается суммой двух чисел: статическим приоритетом (задается извне) и динамическим приоритетом (меняется планировщиком в зависимости от поведения процесса).

				Базовые средства взаимодействия процессов
Разделяемая область памяти - область, доступная нескольким процессам.
Существуют сигналы для предназначаны для организации взаимодействия процессов, они не несут никакой информации, кроме номера сигнала.
Для передачи данных используются каналы, различающиеся на именованные (FIFO) и неименованные (pipe). С каналом связываются две дескриптора, один из которых открыт на запись, другой - на чтение.
Трассировка - режим, когда один процесс (обычно отладчик) контролирует выполнение другого (отслеживаемой программы).
Основным средством взаимодействия через компьютерную сеть можно считать сокеты.
Процесс может установить диспозицию сигнала: установить режим обработки, например вызов функции-обработчика, игнорирование или обработка по умолчанию.

Канал - объект ядра ос, представляющий собой средство однонаправленной передачи данных от одного процесса другому. Он связывает поток ввода и вывода. - Неименованный (pipe) и именованный ()
К неименованному невозможно подключиться.
 
 					СЕТИ
Аппаратное устройство, исп. для соединения с одним или несколькими компьютерами для передачи данных, обычно называют сетевым интерфейсом.
Протокол обмена - набор соглашений, которым должным следовать участники обмена информацией. (TCP для браузера с сайтов в интернете, HTTP для сервера и браузера).
В сетях на основе протокола IP сетевой адрес приписывается не компьютеру, а сетевому интерфейсу, так что шлюзи имеют больше одного адреса - точнее, столько адресов, сколько у данного шлюза интерфейсов.
UDP - дейстаграмма - заголовок из 8 байт - "заворот" в пакет IP
OSI - сеансовый. Например поверх протоколов HTTP/HTTPS при помощи cookie или параметра в адресной строке.
Клиент-сервер - под сервером понимается программа, ожидающая запросов и производящая какие-либо действия исключительно в ответ на запросы, а при отсутствии запросов не делающая ничего. Под клиентом понимается программа, обращающаяся с запросом к серверу.

					Система сокетов
socket - это объект ядра ос, через который проходит сетевое взаимодействие.

Способ построения программ, при котором программа имеет главный цикл, одна итерация которого соответствует наступлению некоторого события из определенного множества,  а все действия программы построены как реакция на событие, называется событийно-управляемым программированием. - выборка события и обработка события
Мультиплексирование ввода-вывода - готовность нескольких потоков ввода-вывода к очередным операциям, а сами операции ввода-вывода становятся реакцией на это событие.
При событийно-ориентированном построении TCP-сервера совершенно необходимо предусмотреть для каждого из клиентов отдельный накопительный буфер.

				Параллельные программы и разделяемые данные
Задачи, в принципе допускающие распараллеливание на независимые последовательности вычисления, вообще встречачются крайне редко, поскольку при решении большинства задач последующие шаги зависят от результатов предыдущих шагов и не омгут начаться раньше.
Для чего действительно нужны потоки, так это для объемных числовых расчетов.
Трэды (потоки) удобно использовать при работе с музыкальным редактром, mp-3 файлами для упаковки/распаковки и другой для обработки интерфейса.
Проблема "разделяемых данных" - т.е. данных, к которым имеют доступ два или более независимых лица, будь то процессы или треды.
Алгоритм Петерсона для работы с критической секцией (разделяемые данные)

				Ядро системы
Ядро ничего не делает по своей инициативе.
Никакой код никакого пользовательского процесса ни при каких условиях не может быть исполнен в привилегированном режиме процессора.
Существуют прерывания для системного вызова и аппаратные ("настоящие").

Гипервизоры Xen, Kernel VM - через одно ядро запустить другое ядро другой ос в виде пользовательского процесса. Может играть роль как системы, так и подсистемы.
Эмуляторы Wine, qemu
OpenVZ - virtual private server

Строение ядра - 1. Аппаратно-зависимый слой, включ. обработчики прерываний и драйверы физич. устройств. 2. Подсистема управления процессами, включая планирование времени ЦП. 3. Менеджер оперативной памяти. 4. Подсистема внешнего хранилища, в которвую входит VFS (виртаульная файловая система). 5. Сетевая подсистема

				Управление процессами
Жизненный цикл стр. 334
Создание настроек MMU( (memory management unit) для преобразования виртуальных адресов в физические.
Планировщик времени ЦП делится на три уровня: долгосрочное (запустить или отложить), среднесрочное (откачка процессов), краткосрочное (какой процесс должен быть принудительно переведен в режим готовности).

				Управление оперативной памятью


